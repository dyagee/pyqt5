# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'CalcPy.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

#This is simple but multifunctional calculator based of python and pyqt5
#*****************************************************************************************************
#*************************************LICENCE AGREEMENT***********************************************
#*****************************************************************************************************
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.


from PyQt5 import QtCore, QtGui, QtWidgets

__version__ = "1.0"
__author__ = "A. Agee"

ERROR_MSG = "ERROR"



class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(245, 500)
        #MainWindow.setMaximumSize(QtCore.QSize(245, 500))
        MainWindow.setFixedSize(QtCore.QSize(245, 500))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(0, 10, 251, 111))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(26)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        font.setStrikeOut(False)
        self.label.setFont(font)
        self.label.setAutoFillBackground(True)
        self.label.setFrameShape(QtWidgets.QFrame.Box)
        self.label.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.label.setLineWidth(3)
        self.label.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label.setObjectName("label")
        self.moduloButton = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.modulo_it())
        self.moduloButton.setGeometry(QtCore.QRect(10, 120, 50, 50))
        font = QtGui.QFont()
        font.setFamily("Albertus MT")
        font.setPointSize(18)
        self.moduloButton.setFont(font)
        self.moduloButton.setAutoDefault(False)
        self.moduloButton.setDefault(False)
        self.moduloButton.setFlat(False)
        self.moduloButton.setObjectName("moduloButton")
        self.divideButton = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.divide_it())
        self.divideButton.setGeometry(QtCore.QRect(70, 120, 50, 50))
        font = QtGui.QFont()
        font.setFamily("Albertus MT")
        font.setPointSize(18)
        self.divideButton.setFont(font)
        self.divideButton.setAccessibleName("")
        self.divideButton.setAutoDefault(False)
        self.divideButton.setDefault(False)
        self.divideButton.setFlat(False)
        self.divideButton.setObjectName("divideButton")
        self.arrowButton = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.shift_it())
        self.arrowButton.setGeometry(QtCore.QRect(130, 120, 50, 50))
        font = QtGui.QFont()
        font.setFamily("Albertus MT")
        font.setPointSize(18)
        self.arrowButton.setFont(font)
        self.arrowButton.setAccessibleName("")
        self.arrowButton.setAutoDefault(False)
        self.arrowButton.setDefault(False)
        self.arrowButton.setFlat(False)
        self.arrowButton.setObjectName("arrowButton")
        self.clearButton = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.press_it("C"))
        self.clearButton.setGeometry(QtCore.QRect(190, 120, 50, 50))
        font = QtGui.QFont()
        font.setFamily("Albertus MT")
        font.setPointSize(18)
        self.clearButton.setFont(font)
        self.clearButton.setAccessibleName("")
        self.clearButton.setAutoDefault(False)
        self.clearButton.setDefault(False)
        self.clearButton.setFlat(False)
        self.clearButton.setObjectName("clearButton")
        self.nineButton = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.press_it("9"))
        self.nineButton.setGeometry(QtCore.QRect(130, 180, 50, 50))
        font = QtGui.QFont()
        font.setFamily("Albertus MT")
        font.setPointSize(18)
        self.nineButton.setFont(font)
        self.nineButton.setAccessibleName("")
        self.nineButton.setAutoDefault(False)
        self.nineButton.setDefault(False)
        self.nineButton.setFlat(False)
        self.nineButton.setObjectName("nineButton")
        self.sevenButton = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.press_it("7"))
        self.sevenButton.setGeometry(QtCore.QRect(10, 180, 50, 50))
        font = QtGui.QFont()
        font.setFamily("Albertus MT")
        font.setPointSize(18)
        self.sevenButton.setFont(font)
        self.sevenButton.setAccessibleName("")
        self.sevenButton.setAutoDefault(False)
        self.sevenButton.setDefault(False)
        self.sevenButton.setFlat(False)
        self.sevenButton.setObjectName("sevenButton")
        self.eightButton = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.press_it("8"))
        self.eightButton.setGeometry(QtCore.QRect(70, 180, 50, 50))
        font = QtGui.QFont()
        font.setFamily("Albertus MT")
        font.setPointSize(18)
        self.eightButton.setFont(font)
        self.eightButton.setAccessibleName("")
        self.eightButton.setAutoDefault(False)
        self.eightButton.setDefault(False)
        self.eightButton.setFlat(False)
        self.eightButton.setObjectName("eightButton")
        self.multiplyButton = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.multiply_it())
        self.multiplyButton.setGeometry(QtCore.QRect(190, 180, 50, 50))
        font = QtGui.QFont()
        font.setFamily("Albertus MT")
        font.setPointSize(18)
        self.multiplyButton.setFont(font)
        self.multiplyButton.setAccessibleName("")
        self.multiplyButton.setAutoDefault(False)
        self.multiplyButton.setDefault(False)
        self.multiplyButton.setFlat(False)
        self.multiplyButton.setObjectName("multiplyButton")
        self.sixButton = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.press_it("6"))
        self.sixButton.setGeometry(QtCore.QRect(130, 240, 50, 50))
        font = QtGui.QFont()
        font.setFamily("Albertus MT")
        font.setPointSize(18)
        self.sixButton.setFont(font)
        self.sixButton.setAccessibleName("")
        self.sixButton.setAutoDefault(False)
        self.sixButton.setDefault(False)
        self.sixButton.setFlat(False)
        self.sixButton.setObjectName("sixButton")
        self.fourButton = QtWidgets.QPushButton(self.centralwidget,clicked= lambda: self.press_it("4"))
        self.fourButton.setGeometry(QtCore.QRect(10, 240, 50, 50))
        font = QtGui.QFont()
        font.setFamily("Albertus MT")
        font.setPointSize(18)
        self.fourButton.setFont(font)
        self.fourButton.setAccessibleName("")
        self.fourButton.setAutoDefault(False)
        self.fourButton.setDefault(False)
        self.fourButton.setFlat(False)
        self.fourButton.setObjectName("fourButton")
        self.fiveButton = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.press_it("5"))
        self.fiveButton.setGeometry(QtCore.QRect(70, 240, 50, 50))
        font = QtGui.QFont()
        font.setFamily("Albertus MT")
        font.setPointSize(18)
        self.fiveButton.setFont(font)
        self.fiveButton.setAccessibleName("")
        self.fiveButton.setAutoDefault(False)
        self.fiveButton.setDefault(False)
        self.fiveButton.setFlat(False)
        self.fiveButton.setObjectName("fiveButton")
        self.minusButton = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.minus_it())
        self.minusButton.setGeometry(QtCore.QRect(190, 240, 50, 50))
        font = QtGui.QFont()
        font.setFamily("Albertus MT")
        font.setPointSize(18)
        self.minusButton.setFont(font)
        self.minusButton.setAccessibleName("")
        self.minusButton.setAutoDefault(False)
        self.minusButton.setDefault(False)
        self.minusButton.setFlat(False)
        self.minusButton.setObjectName("minusButton")
        self.threeButton = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.press_it("3"))
        self.threeButton.setGeometry(QtCore.QRect(130, 300, 50, 50))
        font = QtGui.QFont()
        font.setFamily("Albertus MT")
        font.setPointSize(18)
        self.threeButton.setFont(font)
        self.threeButton.setAccessibleName("")
        self.threeButton.setAutoDefault(False)
        self.threeButton.setDefault(False)
        self.threeButton.setFlat(False)
        self.threeButton.setObjectName("threeButton")
        self.oneButton = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.press_it("1"))
        self.oneButton.setGeometry(QtCore.QRect(10, 300, 50, 50))
        font = QtGui.QFont()
        font.setFamily("Albertus MT")
        font.setPointSize(18)
        self.oneButton.setFont(font)
        self.oneButton.setAccessibleName("")
        self.oneButton.setAutoDefault(False)
        self.oneButton.setDefault(False)
        self.oneButton.setFlat(False)
        self.oneButton.setObjectName("oneButton")
        self.twoButton = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.press_it("2"))
        self.twoButton.setGeometry(QtCore.QRect(70, 300, 50, 50))
        font = QtGui.QFont()
        font.setFamily("Albertus MT")
        font.setPointSize(18)
        self.twoButton.setFont(font)
        self.twoButton.setAccessibleName("")
        self.twoButton.setAutoDefault(False)
        self.twoButton.setDefault(False)
        self.twoButton.setFlat(False)
        self.twoButton.setObjectName("twoButton")
        self.plusButton = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.add_it())
        self.plusButton.setGeometry(QtCore.QRect(190, 300, 50, 50))
        font = QtGui.QFont()
        font.setFamily("Albertus MT")
        font.setPointSize(18)
        self.plusButton.setFont(font)
        self.plusButton.setAccessibleName("")
        self.plusButton.setAutoDefault(False)
        self.plusButton.setDefault(False)
        self.plusButton.setFlat(False)
        self.plusButton.setObjectName("plusButton")
        self.doublezeroButton = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.press_it("00"))
        self.doublezeroButton.setGeometry(QtCore.QRect(130, 360, 50, 50))
        font = QtGui.QFont()
        font.setFamily("Albertus MT")
        font.setPointSize(18)
        self.doublezeroButton.setFont(font)
        self.doublezeroButton.setAccessibleName("")
        self.doublezeroButton.setAutoDefault(False)
        self.doublezeroButton.setDefault(False)
        self.doublezeroButton.setFlat(False)
        self.doublezeroButton.setObjectName("doublezeroButton")
        self.plusminusButton = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.plus_minus_it())
        self.plusminusButton.setGeometry(QtCore.QRect(10, 360, 50, 50))
        font = QtGui.QFont()
        font.setFamily("Albertus MT")
        font.setPointSize(18)
        self.plusminusButton.setFont(font)
        self.plusminusButton.setAccessibleName("")
        self.plusminusButton.setAutoDefault(False)
        self.plusminusButton.setDefault(False)
        self.plusminusButton.setFlat(False)
        self.plusminusButton.setObjectName("plusminusButton")
        self.zeroButton = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.press_it("0"))
        self.zeroButton.setGeometry(QtCore.QRect(70, 360, 50, 50))
        font = QtGui.QFont()
        font.setFamily("Albertus MT")
        font.setPointSize(18)
        self.zeroButton.setFont(font)
        self.zeroButton.setAccessibleName("")
        self.zeroButton.setAutoDefault(False)
        self.zeroButton.setDefault(False)
        self.zeroButton.setFlat(False)
        self.zeroButton.setObjectName("zeroButton")
        self.equalButton = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.calculate_it())
        self.equalButton.setGeometry(QtCore.QRect(190, 360, 50, 111))
        font = QtGui.QFont()
        font.setFamily("Albertus MT")
        font.setPointSize(18)
        self.equalButton.setFont(font)
        self.equalButton.setAccessibleName("")
        self.equalButton.setAutoDefault(False)
        self.equalButton.setDefault(False)
        self.equalButton.setFlat(False)
        self.equalButton.setObjectName("equalButton")
        self.triplezeroButton = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.press_it("000"))
        self.triplezeroButton.setGeometry(QtCore.QRect(130, 420, 50, 50))
        font = QtGui.QFont()
        font.setFamily("Albertus MT")
        font.setPointSize(12)
        self.triplezeroButton.setFont(font)
        self.triplezeroButton.setAccessibleName("")
        self.triplezeroButton.setAutoDefault(False)
        self.triplezeroButton.setDefault(False)
        self.triplezeroButton.setFlat(False)
        self.triplezeroButton.setObjectName("triplezeroButton")
        self.percentButton = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.percent_it())
        self.percentButton.setGeometry(QtCore.QRect(10, 420, 50, 50))
        font = QtGui.QFont()
        font.setFamily("Albertus MT")
        font.setPointSize(7)
        self.percentButton.setFont(font)
        self.percentButton.setAutoDefault(False)
        self.percentButton.setDefault(False)
        self.percentButton.setFlat(False)
        self.percentButton.setObjectName("percentButton")
        self.dotButton = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.dot_it())
        self.dotButton.setGeometry(QtCore.QRect(70, 420, 50, 50))
        font = QtGui.QFont()
        font.setFamily("Albertus MT")
        font.setPointSize(18)
        self.dotButton.setFont(font)
        self.dotButton.setAccessibleName("")
        self.dotButton.setAutoDefault(False)
        self.dotButton.setDefault(False)
        self.dotButton.setFlat(False)
        self.dotButton.setObjectName("dotButton")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionopen = QtWidgets.QAction(MainWindow)
        self.actionopen.setObjectName("actionopen")
        self.actionOpen_file = QtWidgets.QAction(MainWindow)
        self.actionOpen_file.setObjectName("actionOpen_file")
        self.actionSave = QtWidgets.QAction(MainWindow)
        self.actionSave.setObjectName("actionSave")
        self.actionSave_As = QtWidgets.QAction(MainWindow)
        self.actionSave_As.setObjectName("actionSave_As")

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
    
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "CalcPi"))
        self.label.setAccessibleName(_translate("MainWindow", "outputLabel"))
        self.label.setText(_translate("MainWindow", "0"))
        self.moduloButton.setText(_translate("MainWindow", "%"))
        self.divideButton.setText(_translate("MainWindow", "/"))
        self.arrowButton.setText(_translate("MainWindow", "<<"))
        self.clearButton.setText(_translate("MainWindow", "C"))
        self.nineButton.setText(_translate("MainWindow", "9"))
        self.sevenButton.setText(_translate("MainWindow", "7"))
        self.eightButton.setText(_translate("MainWindow", "8"))
        self.multiplyButton.setText(_translate("MainWindow", "x"))
        self.sixButton.setText(_translate("MainWindow", "6"))
        self.fourButton.setText(_translate("MainWindow", "4"))
        self.fiveButton.setText(_translate("MainWindow", "5"))
        self.minusButton.setText(_translate("MainWindow", "-"))
        self.threeButton.setText(_translate("MainWindow", "3"))
        self.oneButton.setText(_translate("MainWindow", "1"))
        self.twoButton.setText(_translate("MainWindow", "2"))
        self.plusButton.setText(_translate("MainWindow", "+"))
        self.doublezeroButton.setText(_translate("MainWindow", "00"))
        self.plusminusButton.setText(_translate("MainWindow", "+/-"))
        self.zeroButton.setText(_translate("MainWindow", "0"))
        self.equalButton.setText(_translate("MainWindow", "="))
        self.triplezeroButton.setText(_translate("MainWindow", "000"))
        self.percentButton.setAccessibleName(_translate("MainWindow", "percentage"))
        self.percentButton.setText(_translate("MainWindow", "PER%"))
        self.dotButton.setText(_translate("MainWindow", "."))
        self.actionopen.setText(_translate("MainWindow", "New"))
        self.actionOpen_file.setText(_translate("MainWindow", "Open file"))
        self.actionSave.setText(_translate("MainWindow", "Save"))
        self.actionSave_As.setText(_translate("MainWindow", "Save As"))

#Creating more functionalities
    def press_it(self,pressed):
        #clear the screen and replace with 0, if there is input replace 0 with empty space and append input
        if pressed == "C":
            self.label.setText("0")
        else:
            if self.label.text()=="0":
                self.label.setText("")
            self.label.setText(f'{self.label.text()}{pressed}')
    def dot_it(self):
        global dot
        screen = self.label.text()
        if screen != '':
            last_digit = screen[-1]
            #check if last item on screen is an arithmetic operator or first item is a zero, append 0. 
            if  dot ==False:
                if screen[0]=='0':
                    self.label.setText(f'0.')
                elif last_digit == '/' or last_digit=='*' or last_digit=='+' :
                    self.label.setText(f'{screen}0.')
                    
                else:
                    screen = f'{screen}.'
                    self.label.setText(screen)
                dot = True
            else:
                #If a dot already, do nothing
                pass
        else:
            self.label.setText('0')

    def divide_it(self):
        global dot
        screen = self.label.text()
        if screen != '':
            #check if last item on screen is an arithmetic operator, replace it with /
            if screen[-1] == '*' or screen[-1]=='+' or screen[-1]=='%' or screen[-1]=='-':
                screen= screen[:-1]
                self.label.setText(f'{screen}/')
                dot = False
            if screen[-1] != '/':
                self.label.setText(f'{screen}/')
                dot = False
            else:
                pass
        else:
            self.label.setText('0')

    def multiply_it(self):
        global dot
        screen = self.label.text()
        if screen != '':
            #check if last item on screen is an arithmetic operator, replace it with *
            if screen[-1] == '/' or screen[-1]=='+' or screen[-1]=='%' or screen[-1]=='-':
                screen= screen[:-1]
                self.label.setText(f'{screen}*')
                dot = False
            if screen[-1] != '*':
                self.label.setText(f'{screen}*')
                dot = False
            else:
                pass
        else:
            self.label.setText('0')

    def add_it(self):
        global dot
        screen = self.label.text()
        if screen != '':
            #check if last item on screen is an arithmetic operator, replace with +
            if screen[-1] == '/' or screen[-1]=='*' or screen[-1]=='%' or screen[-1]=='-':
                screen= screen[:-1]
                self.label.setText(f'{screen}+')
                dot = False
            if screen[-1] != '+':
                self.label.setText(f'{screen}+')
                dot = False
            else:
                pass
        else:
            self.label.setText('0')

    def minus_it(self):
        global dot
        screen = self.label.text()
        if screen != '':
            #check if last item on screen is an arithmetic operator, replace with -
            if screen[-1] == '/' or screen[-1]=='*' or screen[-1]=='%' or screen[-1]=='-':
                screen= screen[:-1]
                self.label.setText(f'{screen}-')
                dot = False
            if screen[-1] != '-':
                self.label.setText(f'{screen}-')
                dot = False
            else:
                pass
        else:
            self.label.setText('0')

    def calculate_it(self):
        screen = self.label.text()
        try:
            #This only evaluate for percentage
            if screen[-1]=='R':
                screen = screen.replace("PER","/100")
                per = eval(screen) 
                self.label.setText(str(per))  
            else:
                #This evaluate every expression on screen
                result = eval(screen)
                self.label.setText(str(result))
        except:
             self.label.setText(ERROR_MSG)
                
    def percent_it(self):
        screen = self.label.text()
        if screen != '':
                
            #check if last item on screen is an arithmetic operator, clear it and replace with PERcentage
            if screen[-1] == '/' or screen[-1]=='*' or screen[-1]=='%' or screen[-1]=='-' or screen[-1]=='.':
                screen= screen[:-1]
                screen = self.label.setText(f'{screen}PER')
                dot = False
            #check if first item on screen is an arithmetic operator, error
            if screen[0] == '/' or screen[0]=='*' or screen[0]=='%' or screen[0]=='-' or screen[0]=='.':
                screen = self.label.setText(ERROR_MSG)
                
            if screen[-1]!= 'PER':
                self.label.setText(f'{screen}PER')
            if screen[len(screen)-1]== "PER":
                if screen[-1] == '/' or screen[-1]=='*' or screen[-1]=='%' or screen[-1]=='-' or screen[-1]=='.': 
                    screen= screen[:-1]
                    screen = self.label.setText(ERROR_MSG)
                    
        else:
            self.label.setText('0')

    def modulo_it(self):
        screen = self.label.text()
        if screen != '':
                
            #check if last item on screen is an arithmetic operator, replace it with %
            if screen[-1] == '/' or screen[-1]=='*'  or screen[-1]=='-' or screen[-1]=='.':
                screen= screen[:-1]
                screen = self.label.setText(f'{screen}%')
                dot = True
            if screen[-1]!= '%':
                self.label.setText(f'{screen}%')
                dot = True
        else:
            self.label.setText('0')

    def plus_minus_it(self):
        screen = self.label.text()
        if screen !='':
                
            #check if first item on screen is arithmetic operator
            if screen[0] == '/' or screen[0]=='*'  or screen[0]=='.' or screen[0]=='%':
                pass
            else:
                if screen[0]!='+' and screen[0]!=0:
                    self.label.setText(f'+{screen}')
                    dot = True
                #check if first item on screen is a zero, append +/-0.
                if screen[0]=='0':
                    if screen[0]!='+':
                        self.label.setText(f'+0.')
                        dot = True
                    if screen[0]=='+':
                        screen = screen[1:]
                        self.label.setText(f'-0.')
                        dot = True
                    if screen[0]=='-':
                        screen = screen[1:]
                        self.label.setText(f'+0.')
                        dot = True
                #Switch between + and -
                if screen[0]=='+':
                    screen = screen[1:]
                    self.label.setText(f'-{screen}')
                    dot = True
                if screen[0]=='-':
                    screen = screen[1:]
                    self.label.setText(f'+{screen}')
                    dot = True
        else:
            self.label.setText('0')

    def shift_it(self):
        #clear the screen by one digit to left
        screen = self.label.text()
        if screen =='':
            self.label.setText('0')
        else:
            screen =screen[:-1]
            self.label.setText(screen)
                
        

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
